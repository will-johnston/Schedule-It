/api/user/login - Login to the system
Password should be securely hashed before sending, preferably
{
  "name" : "{USERNAME}",
  "pass" : "{PASSWORD}"
}
Returns a login cookie upon success with status OK
{
  "cookie" : {COOKIE}
}
If failure, returns a status appropriate to the error (BadRequest, MethodNotAvailable) and returns an error string
{
   "error" : "{ERROR MESSAGE}:
}

/api/user/edit - Edit account info, create profile picture, set notifications
Fields that need to be changed are supplied in the request, if you only want to change the password do;
{
   "username" : "{USERNAME}",
   "cookie" : {LOGIN COOKIE},
   "pass" : "{NEW PASSWORD}"

}
Returns an empty string with status OK if it succeeds
Returns an error string (similar to above) if it fails
/api/user/create - Create a new account
Like user login, the password should be hashed
{
   "username" : "{NEW USERNAME}",
   "pass" : "{NEW PASSWORD}",
   "phone" : "{NEW PHONE NUMBER}",
   "name" : "{NEW FULL NAME}",
   "email" : "{NEW EMAIL}"
}
Returns an error (like above) or a login cookie if successful.
/api/user/friends/add - Add a friend
/api/user/friends/remove - Remove friend
/api/user/search - Search all user's in the system
/api/user/groups/create - Create a new group
/api/user/groups/add - Add a friend to group
/api/user/groups/join - Join a group from an invitation
/api/user/groups/leave - Leave the group
/api/notifications/getnew - Get the new notifications for the user
/api/user/calendar/get - Get the user's calendar
/api/user/groups/calendar/get - Get the group's calendar
/api/user/calendar/events/create - Create a new event in the calendar
/api/user/calendar/events/edit - Edit the information for an event
/api/user/groups/calendar/events/create - Create a new event, if the user is an admin
/api/user/groups/edit - Edit group info, set permissions
/api/user/groups/calendar/events/respond - User sets their 'going' status - accept, decline, on the fence
/api/user/getsettings - Gets user's current settings
Request:
{
	"cookie" : {LOGIN COOKIE}
}
Successful Response:
{
	"username": "{USERNAME}",
    "fullname": "{NAME}",
    "email": "{EMAIL ADDRESS}",
    "phone": "{PHONE NUMBER}"
}
/* Need chat methods */
